import java.util.Date;
import java.util.Calendar;

/**
 * WeekNavitatorImpl : actual implementation of the utility class to 
 * easily navigatate through the weeks. NOTE : For this application a 
 * week starts on monday and ends on sunday.
 */

public class WeekNavigatorImpl implements WeekNavigator {

    private Calendar myCalendar;

    public WeekNavigatorImpl() {
        myCalendar=Calendar.getInstance();
        myCalendar.setFirstDayOfWeek(Calendar.MONDAY);
    }
    
    /** 
     * sets the navigator to the specified date. 
     * If the day of week of the date is not a monday,
     * it must move to the monday in that week. 
     */    
    public void set(Date d) {
        myCalendar.setTime(d);
        myCalendar.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
    }
    
    /** returns the monday of the current week. */
    public Date get() {
        return myCalendar.getTime(); 
    }
    
    /** returns the current week */
    public int getWeek() {       
        return myCalendar.get(Calendar.WEEK_OF_YEAR); 
    }
    
    /** returns the current month based on the monday of this week */
    public int getMonth() {
        return myCalendar.get(Calendar.MONTH); 
    }
    
    /** returns the current year based on the monday of this week */
    public int getYear() {
        return myCalendar.get(Calendar.YEAR); 
    }
    
    /** moves the navigator to the next week. */
    public void nextWeek() {
        myCalendar.add(Calendar.WEEK_OF_YEAR,1); 
    }
    
    /** moves the navigator to the next month. */
    public void nextMonth() {
        myCalendar.add(Calendar.MONTH,1);
        myCalendar.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
    }
    
    /** moves the navigator to the next year. */
    public void nextYear() {
        myCalendar.add(Calendar.YEAR,1);
        myCalendar.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
    }
    
    /** moves the navigator to the previous month. */
    public void previousWeek() {
        myCalendar.add(Calendar.WEEK_OF_YEAR,-1); 
    }
    
    /** moves the navigator to the previous week. */
    public void previousMonth() {
        myCalendar.add(Calendar.MONTH,-1);
        myCalendar.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
    }
    
    /** moves the navigator to the previous year. */
    public void previousYear() {
        myCalendar.add(Calendar.YEAR,-1);
        myCalendar.set(Calendar.DAY_OF_WEEK,Calendar.MONDAY);
    }

}
