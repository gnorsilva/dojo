import java.awt.Color;

/**
 * ColorToolkit contains Dr.Wongs utilities for seeing what
 * the client sees.
 */

public class ColorToolkit {
	
	/**
	 * makeGrayscale converts the given Bitmap into grayscaled Bitmap. 
	 * @param bmp the Bitmap to convert into a grayscale bitmap. 
	 * @return a blurred bitmap. 
	 */
	public Bitmap makeGrayscale(Bitmap bmp) {
		Bitmap target= bmp.copy();
		for (int y=0;y<bmp.getHeight();y++) {
			for (int x=0;x<bmp.getWidth();x++) {
				Color src=bmp.getPixel(x,y);
				int r=src.getRed();
				int g=src.getGreen();
				int b=src.getBlue();
				int gray=(r+g+b)/3;
				if ((r+g+b)%3>1) gray++;
				target.setPixel(x,y,new Color(gray,gray,gray));
			}			
		}
		return target;
	}
	
	/**
	 * makeGrayscale converts the given Bitmap into blurred Bitmap. 
	 * @param bmp the Bitmap to convert into a blurred bitmap.
	 * @return a blurred bitmap. 
	 */
	public Bitmap makeBlurred(Bitmap bmp) {
		Bitmap target= bmp.copy();
		for (int y=0;y<bmp.getHeight();y++) {
			for (int x=0;x<bmp.getWidth();x++) {
				target.setPixel(x,y,blur(bmp,x,y));
			}			
		}
		return target;
	}
	
	protected Color blur(Bitmap src,int x,int y) {
		float[] avg=new float[3];
		for (int yy=-1;yy<=1;yy++) {
			float[] f=null;
			for (int xx=-1;xx<=1;xx++) {
				int xxx=x+xx;
				int yyy=y+yy;
				Color n=null;
				if ((xxx>=0)&&(yyy>=0)&&(xxx<src.getWidth())&&(yyy<src.getHeight())) {
					n=src.getPixel(xxx,yyy);
				} else {
					n=Color.GRAY;
				}
				f=n.getComponents(f);
				avg[0]+=f[0];
				avg[1]+=f[1];
				avg[2]+=f[2];
			}
		}
		return new Color(avg[0]/9,avg[1]/9,avg[2]/9);		
	}
	
}
